# Generated by Django 3.2.16 on 2024-03-17 10:01

import colorfield.fields
import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import collect_payments.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('surname', models.CharField(max_length=150, verbose_name='Отчество')),
                ('username', models.CharField(max_length=150, unique=True, validators=[django.core.validators.RegexValidator(message='Имя пользователя содержит недопустимые символы.', regex='^[\\w.@+-]+$'), collect_payments.validators.validate_username], verbose_name='Уникальный юзернейм')),
                ('password', models.CharField(max_length=150, verbose_name='Пароль')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='Адрес электронной почты')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('username',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Collect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название сбора')),
                ('description', models.TextField(verbose_name='Описание сбора')),
                ('planned_amount', models.PositiveBigIntegerField(blank=True, default=None, null=True, verbose_name='Планируемая сумма сбора')),
                ('cover_image', models.ImageField(upload_to='collects/', verbose_name='Обложка сбора')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания сбора')),
                ('end_date', models.DateTimeField(verbose_name='Дата окончания сбора')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collect_author', to=settings.AUTH_USER_MODEL, verbose_name='Автор платежа')),
            ],
            options={
                'verbose_name': 'Сбор',
                'verbose_name_plural': 'Сборы',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Reason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='Название повода')),
                ('color', colorfield.fields.ColorField(default='#000000', image_field=None, max_length=7, samples=None, verbose_name='Цвет повода в hex-формате')),
                ('slug', models.SlugField(max_length=250, unique=True, verbose_name='Слаг')),
            ],
            options={
                'verbose_name': 'Повод',
                'verbose_name_plural': 'Поводы',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveBigIntegerField(validators=[django.core.validators.MinValueValidator(limit_value=1, message='Выберете сумму, которую готовы заплатить!')], verbose_name='Сумма платежа')),
                ('comments', models.CharField(max_length=250, verbose_name='Комментарий к платежу')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата платежа')),
                ('collect', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='collect_payments.collect', verbose_name='Сбор для которого платеж')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_author', to=settings.AUTH_USER_MODEL, verbose_name='Автор платежа')),
            ],
            options={
                'verbose_name': 'Платеж',
                'verbose_name_plural': 'Платежи',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='collect',
            name='reason',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collects', to='collect_payments.reason', verbose_name='Повод для сбора'),
        ),
        migrations.AddConstraint(
            model_name='customuser',
            constraint=models.UniqueConstraint(fields=('username', 'email'), name='unique_user_with_email'),
        ),
    ]
